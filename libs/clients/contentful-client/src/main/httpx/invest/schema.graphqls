type Query {
  asset(id: String!, preview: Boolean, locale: String): Asset

  assetCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: AssetFilter, order: [AssetOrder]): AssetCollection

  fundHero(id: String!, preview: Boolean, locale: String): FundHero

  fundHeroCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: FundHeroFilter, order: [FundHeroOrder]): FundHeroCollection

  fundContact(id: String!, preview: Boolean, locale: String): FundContact

  fundContactCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: FundContactFilter, order: [FundContactOrder]): FundContactCollection

  fundInfo(id: String!, preview: Boolean, locale: String): FundInfo

  fundInfoCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: FundInfoFilter, order: [FundInfoOrder]): FundInfoCollection

  infoCard(id: String!, preview: Boolean, locale: String): InfoCard

  infoCardCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: InfoCardFilter, order: [InfoCardOrder]): InfoCardCollection

  portfolioAsset(id: String!, preview: Boolean, locale: String): PortfolioAsset

  portfolioAssetCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: PortfolioAssetFilter, order: [PortfolioAssetOrder]): PortfolioAssetCollection

  onboardingStep(id: String!, preview: Boolean, locale: String): OnboardingStep

  onboardingStepCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: OnboardingStepFilter, order: [OnboardingStepOrder]): OnboardingStepCollection

  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: EntryFilter, order: [EntryOrder]): EntryCollection
}

"""
Represents a binary file in a space. An asset can be any file type.
"""
type Asset {
  sys: Sys!

  contentfulMetadata: ContentfulMetadata!

  title(locale: String): String

  description(locale: String): String

  contentType(locale: String): String

  fileName(locale: String): String

  size(locale: String): Int

  url(transform: ImageTransformOptions, locale: String): String

  width(locale: String): Int

  height(locale: String): Int

  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
}

type Sys {
  id: String!

  spaceId: String!

  environmentId: String!

  publishedAt: DateTime

  firstPublishedAt: DateTime

  publishedVersion: Int
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

type ContentfulMetadata {
  tags: [ContentfulTag]!
}

"""
Represents a tag entity for finding and organizing content easily.
    Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String

  name: String
}

input ImageTransformOptions {
  """
  Desired width in pixels. Defaults to the original image width.
  """
  width: Dimension

  """
  Desired height in pixels. Defaults to the original image height.
  """
  height: Dimension

  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality

  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int

  """
  Desired resize strategy. Defaults to `FIT`.
  """
  resizeStrategy: ImageResizeStrategy

  """
  Desired resize focus area. Defaults to `CENTER`.
  """
  resizeFocus: ImageResizeFocus

  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor

  """
  Desired image format. Defaults to the original image format.
  """
  format: ImageFormat
}

"""
The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.
"""
scalar Dimension

"""
The 'Quality' type represents quality as whole numeric values between `1` and `100`.
"""
scalar Quality

enum ImageResizeStrategy {
  """
  Resizes the image to fit into the specified dimensions.
  """
  FIT

  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD

  """
  Resizes the image to the specified dimensions, cropping the image if needed.
  """
  FILL

  """
  Resizes the image to the specified dimensions, changing the original aspect ratio if needed.
  """
  SCALE

  """
  Crops a part of the original image to fit into the specified dimensions.
  """
  CROP

  """
  Creates a thumbnail from the image.
  """
  THUMB
}

enum ImageResizeFocus {
  """
  Focus the resizing on the center.
  """
  CENTER

  """
  Focus the resizing on the top.
  """
  TOP

  """
  Focus the resizing on the top right.
  """
  TOP_RIGHT

  """
  Focus the resizing on the right.
  """
  RIGHT

  """
  Focus the resizing on the bottom right.
  """
  BOTTOM_RIGHT

  """
  Focus the resizing on the bottom.
  """
  BOTTOM

  """
  Focus the resizing on the bottom left.
  """
  BOTTOM_LEFT

  """
  Focus the resizing on the left.
  """
  LEFT

  """
  Focus the resizing on the top left.
  """
  TOP_LEFT

  """
  Focus the resizing on the largest face.
  """
  FACE

  """
  Focus the resizing on the area containing all the faces.
  """
  FACES
}

"""
The 'HexColor' type represents color in `rgb:ffffff` string format.
"""
scalar HexColor

enum ImageFormat {
  """
  JPG image format.
  """
  JPG

  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE

  """
  PNG image format
  """
  PNG

  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8

  """
  WebP image format.
  """
  WEBP

  AVIF
}

type AssetLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection

  fundHeroCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): FundHeroCollection

  fundContactCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): FundContactCollection

  fundInfoCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): FundInfoCollection
}

type EntryCollection {
  total: Int!

  skip: Int!

  limit: Int!

  items: [Entry]!
}

interface Entry {
  sys: Sys!

  contentfulMetadata: ContentfulMetadata!
}

type FundHeroCollection {
  total: Int!

  skip: Int!

  limit: Int!

  items: [FundHero]!
}

"""
Fund Hero shown at the top of Fund Info / Home page [See type definition](https://app.contentful.com/spaces/me2b2zihicu2/content_types/fundHero)
"""
type FundHero implements Entry {
  sys: Sys!

  contentfulMetadata: ContentfulMetadata!

  linkedFrom(allowedLocales: [String]): FundHeroLinkingCollections

  name(locale: String): String

  image(preview: Boolean, locale: String): Asset

  description(locale: String): FundHeroDescription
}

type FundHeroLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection

  fundInfoCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): FundInfoCollection
}

type FundInfoCollection {
  total: Int!

  skip: Int!

  limit: Int!

  items: [FundInfo]!
}

"""
Fund Info shown in Home page [See type definition](https://app.contentful.com/spaces/me2b2zihicu2/content_types/fundInfo)
"""
type FundInfo implements Entry {
  sys: Sys!

  contentfulMetadata: ContentfulMetadata!

  linkedFrom(allowedLocales: [String]): FundInfoLinkingCollections

  hero(preview: Boolean, locale: String): FundHero

  date(locale: String): DateTime

  title(locale: String): String

  infoCardsCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): FundInfoInfoCardsCollection

  portfolioCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): FundInfoPortfolioCollection

  chart(preview: Boolean, locale: String): Asset

  contact(preview: Boolean, locale: String): FundContact
}

type FundInfoLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection
}

type FundInfoInfoCardsCollection {
  total: Int!

  skip: Int!

  limit: Int!

  items: [InfoCard]!
}

"""
Small card with 2 row - title & caption [See type definition](https://app.contentful.com/spaces/me2b2zihicu2/content_types/infoCard)
"""
type InfoCard implements Entry {
  sys: Sys!

  contentfulMetadata: ContentfulMetadata!

  linkedFrom(allowedLocales: [String]): InfoCardLinkingCollections

  title(locale: String): String

  caption(locale: String): String
}

type InfoCardLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection

  fundInfoCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): FundInfoCollection
}

type FundInfoPortfolioCollection {
  total: Int!

  skip: Int!

  limit: Int!

  items: [PortfolioAsset]!
}

"""
Individual assest in a portfolio [See type definition](https://app.contentful.com/spaces/me2b2zihicu2/content_types/portfolioAsset)
"""
type PortfolioAsset implements Entry {
  sys: Sys!

  contentfulMetadata: ContentfulMetadata!

  linkedFrom(allowedLocales: [String]): PortfolioAssetLinkingCollections

  name(locale: String): String

  units(locale: String): Float
}

type PortfolioAssetLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection

  fundInfoCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): FundInfoCollection
}

"""
Contact Us image and description shown at bottom of Fund Info / Home page [See type definition](https://app.contentful.com/spaces/me2b2zihicu2/content_types/fundContact)
"""
type FundContact implements Entry {
  sys: Sys!

  contentfulMetadata: ContentfulMetadata!

  linkedFrom(allowedLocales: [String]): FundContactLinkingCollections

  name(locale: String): String

  image(preview: Boolean, locale: String): Asset

  description(locale: String): FundContactDescription
}

type FundContactLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection

  fundInfoCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): FundInfoCollection
}

type FundContactDescription {
  json: JSON!

  links: FundContactDescriptionLinks!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type FundContactDescriptionLinks {
  entries: FundContactDescriptionEntries!

  assets: FundContactDescriptionAssets!
}

type FundContactDescriptionEntries {
  inline: [Entry]!

  hyperlink: [Entry]!

  block: [Entry]!
}

type FundContactDescriptionAssets {
  hyperlink: [Asset]!

  block: [Asset]!
}

type FundHeroDescription {
  json: JSON!

  links: FundHeroDescriptionLinks!
}

type FundHeroDescriptionLinks {
  entries: FundHeroDescriptionEntries!

  assets: FundHeroDescriptionAssets!
}

type FundHeroDescriptionEntries {
  inline: [Entry]!

  hyperlink: [Entry]!

  block: [Entry]!
}

type FundHeroDescriptionAssets {
  hyperlink: [Asset]!

  block: [Asset]!
}

type FundContactCollection {
  total: Int!

  skip: Int!

  limit: Int!

  items: [FundContact]!
}

type AssetCollection {
  total: Int!

  skip: Int!

  limit: Int!

  items: [Asset]!
}

input AssetFilter {
  sys: SysFilter

  contentfulMetadata: ContentfulMetadataFilter

  title_exists: Boolean

  title: String

  title_not: String

  title_in: [String]

  title_not_in: [String]

  title_contains: String

  title_not_contains: String

  description_exists: Boolean

  description: String

  description_not: String

  description_in: [String]

  description_not_in: [String]

  description_contains: String

  description_not_contains: String

  url_exists: Boolean

  url: String

  url_not: String

  url_in: [String]

  url_not_in: [String]

  url_contains: String

  url_not_contains: String

  size_exists: Boolean

  size: Int

  size_not: Int

  size_in: [Int]

  size_not_in: [Int]

  size_gt: Int

  size_gte: Int

  size_lt: Int

  size_lte: Int

  contentType_exists: Boolean

  contentType: String

  contentType_not: String

  contentType_in: [String]

  contentType_not_in: [String]

  contentType_contains: String

  contentType_not_contains: String

  fileName_exists: Boolean

  fileName: String

  fileName_not: String

  fileName_in: [String]

  fileName_not_in: [String]

  fileName_contains: String

  fileName_not_contains: String

  width_exists: Boolean

  width: Int

  width_not: Int

  width_in: [Int]

  width_not_in: [Int]

  width_gt: Int

  width_gte: Int

  width_lt: Int

  width_lte: Int

  height_exists: Boolean

  height: Int

  height_not: Int

  height_in: [Int]

  height_not_in: [Int]

  height_gt: Int

  height_gte: Int

  height_lt: Int

  height_lte: Int

  OR: [AssetFilter]

  AND: [AssetFilter]
}

input SysFilter {
  id_exists: Boolean

  id: String

  id_not: String

  id_in: [String]

  id_not_in: [String]

  id_contains: String

  id_not_contains: String

  publishedAt_exists: Boolean

  publishedAt: DateTime

  publishedAt_not: DateTime

  publishedAt_in: [DateTime]

  publishedAt_not_in: [DateTime]

  publishedAt_gt: DateTime

  publishedAt_gte: DateTime

  publishedAt_lt: DateTime

  publishedAt_lte: DateTime

  firstPublishedAt_exists: Boolean

  firstPublishedAt: DateTime

  firstPublishedAt_not: DateTime

  firstPublishedAt_in: [DateTime]

  firstPublishedAt_not_in: [DateTime]

  firstPublishedAt_gt: DateTime

  firstPublishedAt_gte: DateTime

  firstPublishedAt_lt: DateTime

  firstPublishedAt_lte: DateTime

  publishedVersion_exists: Boolean

  publishedVersion: Float

  publishedVersion_not: Float

  publishedVersion_in: [Float]

  publishedVersion_not_in: [Float]

  publishedVersion_gt: Float

  publishedVersion_gte: Float

  publishedVersion_lt: Float

  publishedVersion_lte: Float
}

input ContentfulMetadataFilter {
  tags_exists: Boolean

  tags: ContentfulMetadataTagsFilter
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]

  id_contains_some: [String]

  id_contains_none: [String]
}

enum AssetOrder {
  url_ASC

  url_DESC

  size_ASC

  size_DESC

  contentType_ASC

  contentType_DESC

  fileName_ASC

  fileName_DESC

  width_ASC

  width_DESC

  height_ASC

  height_DESC

  sys_id_ASC

  sys_id_DESC

  sys_publishedAt_ASC

  sys_publishedAt_DESC

  sys_firstPublishedAt_ASC

  sys_firstPublishedAt_DESC

  sys_publishedVersion_ASC

  sys_publishedVersion_DESC
}

input FundHeroFilter {
  sys: SysFilter

  contentfulMetadata: ContentfulMetadataFilter

  name_exists: Boolean

  name: String

  name_not: String

  name_in: [String]

  name_not_in: [String]

  name_contains: String

  name_not_contains: String

  image_exists: Boolean

  description_exists: Boolean

  description_contains: String

  description_not_contains: String

  OR: [FundHeroFilter]

  AND: [FundHeroFilter]
}

enum FundHeroOrder {
  name_ASC

  name_DESC

  sys_id_ASC

  sys_id_DESC

  sys_publishedAt_ASC

  sys_publishedAt_DESC

  sys_firstPublishedAt_ASC

  sys_firstPublishedAt_DESC

  sys_publishedVersion_ASC

  sys_publishedVersion_DESC
}

input FundContactFilter {
  sys: SysFilter

  contentfulMetadata: ContentfulMetadataFilter

  name_exists: Boolean

  name: String

  name_not: String

  name_in: [String]

  name_not_in: [String]

  name_contains: String

  name_not_contains: String

  image_exists: Boolean

  description_exists: Boolean

  description_contains: String

  description_not_contains: String

  OR: [FundContactFilter]

  AND: [FundContactFilter]
}

enum FundContactOrder {
  name_ASC

  name_DESC

  sys_id_ASC

  sys_id_DESC

  sys_publishedAt_ASC

  sys_publishedAt_DESC

  sys_firstPublishedAt_ASC

  sys_firstPublishedAt_DESC

  sys_publishedVersion_ASC

  sys_publishedVersion_DESC
}

input FundInfoFilter {
  hero: cfFundHeroNestedFilter

  contact: cfFundContactNestedFilter

  sys: SysFilter

  contentfulMetadata: ContentfulMetadataFilter

  hero_exists: Boolean

  date_exists: Boolean

  date: DateTime

  date_not: DateTime

  date_in: [DateTime]

  date_not_in: [DateTime]

  date_gt: DateTime

  date_gte: DateTime

  date_lt: DateTime

  date_lte: DateTime

  title_exists: Boolean

  title: String

  title_not: String

  title_in: [String]

  title_not_in: [String]

  title_contains: String

  title_not_contains: String

  infoCardsCollection_exists: Boolean

  portfolioCollection_exists: Boolean

  chart_exists: Boolean

  contact_exists: Boolean

  OR: [FundInfoFilter]

  AND: [FundInfoFilter]
}

input cfFundHeroNestedFilter {
  sys: SysFilter

  contentfulMetadata: ContentfulMetadataFilter

  name_exists: Boolean

  name: String

  name_not: String

  name_in: [String]

  name_not_in: [String]

  name_contains: String

  name_not_contains: String

  image_exists: Boolean

  description_exists: Boolean

  description_contains: String

  description_not_contains: String

  OR: [cfFundHeroNestedFilter]

  AND: [cfFundHeroNestedFilter]
}

input cfFundContactNestedFilter {
  sys: SysFilter

  contentfulMetadata: ContentfulMetadataFilter

  name_exists: Boolean

  name: String

  name_not: String

  name_in: [String]

  name_not_in: [String]

  name_contains: String

  name_not_contains: String

  image_exists: Boolean

  description_exists: Boolean

  description_contains: String

  description_not_contains: String

  OR: [cfFundContactNestedFilter]

  AND: [cfFundContactNestedFilter]
}

enum FundInfoOrder {
  date_ASC

  date_DESC

  title_ASC

  title_DESC

  sys_id_ASC

  sys_id_DESC

  sys_publishedAt_ASC

  sys_publishedAt_DESC

  sys_firstPublishedAt_ASC

  sys_firstPublishedAt_DESC

  sys_publishedVersion_ASC

  sys_publishedVersion_DESC
}

type InfoCardCollection {
  total: Int!

  skip: Int!

  limit: Int!

  items: [InfoCard]!
}

input InfoCardFilter {
  sys: SysFilter

  contentfulMetadata: ContentfulMetadataFilter

  title_exists: Boolean

  title: String

  title_not: String

  title_in: [String]

  title_not_in: [String]

  title_contains: String

  title_not_contains: String

  caption_exists: Boolean

  caption: String

  caption_not: String

  caption_in: [String]

  caption_not_in: [String]

  caption_contains: String

  caption_not_contains: String

  OR: [InfoCardFilter]

  AND: [InfoCardFilter]
}

enum InfoCardOrder {
  title_ASC

  title_DESC

  caption_ASC

  caption_DESC

  sys_id_ASC

  sys_id_DESC

  sys_publishedAt_ASC

  sys_publishedAt_DESC

  sys_firstPublishedAt_ASC

  sys_firstPublishedAt_DESC

  sys_publishedVersion_ASC

  sys_publishedVersion_DESC
}

type PortfolioAssetCollection {
  total: Int!

  skip: Int!

  limit: Int!

  items: [PortfolioAsset]!
}

input PortfolioAssetFilter {
  sys: SysFilter

  contentfulMetadata: ContentfulMetadataFilter

  name_exists: Boolean

  name: String

  name_not: String

  name_in: [String]

  name_not_in: [String]

  name_contains: String

  name_not_contains: String

  units_exists: Boolean

  units: Float

  units_not: Float

  units_in: [Float]

  units_not_in: [Float]

  units_gt: Float

  units_gte: Float

  units_lt: Float

  units_lte: Float

  OR: [PortfolioAssetFilter]

  AND: [PortfolioAssetFilter]
}

enum PortfolioAssetOrder {
  name_ASC

  name_DESC

  units_ASC

  units_DESC

  sys_id_ASC

  sys_id_DESC

  sys_publishedAt_ASC

  sys_publishedAt_DESC

  sys_firstPublishedAt_ASC

  sys_firstPublishedAt_DESC

  sys_publishedVersion_ASC

  sys_publishedVersion_DESC
}

"""
Onboarding step for Invest app [See type definition](https://app.contentful.com/spaces/me2b2zihicu2/content_types/onboardingStep)
"""
type OnboardingStep implements Entry {
  sys: Sys!

  contentfulMetadata: ContentfulMetadata!

  linkedFrom(allowedLocales: [String]): OnboardingStepLinkingCollections

  name(locale: String): String

  content(locale: String): OnboardingStepContent
}

type OnboardingStepLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection
}

type OnboardingStepContent {
  json: JSON!

  links: OnboardingStepContentLinks!
}

type OnboardingStepContentLinks {
  entries: OnboardingStepContentEntries!

  assets: OnboardingStepContentAssets!
}

type OnboardingStepContentEntries {
  inline: [Entry]!

  hyperlink: [Entry]!

  block: [Entry]!
}

type OnboardingStepContentAssets {
  hyperlink: [Asset]!

  block: [Asset]!
}

type OnboardingStepCollection {
  total: Int!

  skip: Int!

  limit: Int!

  items: [OnboardingStep]!
}

input OnboardingStepFilter {
  sys: SysFilter

  contentfulMetadata: ContentfulMetadataFilter

  name_exists: Boolean

  name: String

  name_not: String

  name_in: [String]

  name_not_in: [String]

  name_contains: String

  name_not_contains: String

  content_exists: Boolean

  content_contains: String

  content_not_contains: String

  OR: [OnboardingStepFilter]

  AND: [OnboardingStepFilter]
}

enum OnboardingStepOrder {
  name_ASC

  name_DESC

  sys_id_ASC

  sys_id_DESC

  sys_publishedAt_ASC

  sys_publishedAt_DESC

  sys_firstPublishedAt_ASC

  sys_firstPublishedAt_DESC

  sys_publishedVersion_ASC

  sys_publishedVersion_DESC
}

input EntryFilter {
  sys: SysFilter

  contentfulMetadata: ContentfulMetadataFilter

  OR: [EntryFilter]

  AND: [EntryFilter]
}

enum EntryOrder {
  sys_id_ASC

  sys_id_DESC

  sys_publishedAt_ASC

  sys_publishedAt_DESC

  sys_firstPublishedAt_ASC

  sys_firstPublishedAt_DESC

  sys_publishedVersion_ASC

  sys_publishedVersion_DESC
}

schema {
  query: Query
}
