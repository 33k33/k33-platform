swagger: "2.0"

info:
  title: K33 Backend API - Canary
  description: "K33 Backend API for Canary Deployment"
  version: "1.0.0"

host: canary.api.k33.com

schemes:
  - "https"

x-google-backend:
  address: "https://canary---${GCP_BACKEND_HOST}"
  protocol: h2
  jwt_audience: "https://${GCP_BACKEND_HOST}"

paths:

  "/ping":
    get:
      description: "Ping endpoint for checking uptime and connectivity"
      operationId: "ping"
      responses:
        200:
          description: "pong"
          schema:
            type: string
    post:
      description: "Ping endpoint for checking uptime and connectivity"
      operationId: "postPing"
      responses:
        200:
          description: "pong"
          schema:
            type: string
  "/utc":
    get:
      description: "utc endpoint for checking server time"
      operationId: "utc"
      responses:
        200:
          description: "UTC timestamp"
          schema:
            type: string
      security:
        - firebase: [ ]


  "/whoami":
    get:
      description: "Get OAuth2 JWT payload"
      operationId: "whoami"
      responses:
        200:
          description: "Get OAuth2 JWT payload json"
          schema:
            type: string
      security:
        - firebase: [ ]
  "/firebase-custom-token":
    get:
      description: |
        Pass Apple id_token as Bearer value to Auth header.
        If the token is valid, it will try to find an existing user using email from id_token.
        If the user does not exist, it will create a new user.
        For valid Apple id_token, it returns Firebase custom token for new/existing user.
      operationId: "getFirebaseCustomToken"
      responses:
        200:
          description: "Firebase custom token"
          schema:
            type: string
      security:
        - apple: [ ]


  "/user":
    get:
      description: "Get user"
      operationId: getUser
      responses:
        200:
          description: User
          schema:
            $ref: "#/definitions/User"
      security:
        - firebase: [ ]
    post:
      description: |
        Create user using userId from JWT OAuth Identity token in Authentication Bearer header.
        New Analytics ID will be assigned to this user.
      operationId: createUser
      parameters:
        - name: "id-provider"
          in: query
          type: string
          enum:
            - google
            - apple
            - microsoft
            - email
          required: false
        - name: "source-url"
          in: query
          type: string
          format: url
          required: false
      responses:
        200:
          description: "Created User"
          schema:
            $ref: "#/definitions/User"
      security:
        - firebase: [ ]


  "/graphql":
    get:
      description: "GraphQL GET endpoint"
      produces:
        - application/json
      operationId: "graphqlGet"
      parameters:
        - name: "query"
          in: query
          description: "GraphQL Query."
          type: string
          required: true
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/GraphQLResponse'
      security:
        - firebase: [ ]
    post:
      description: "GraphQL POST endpoint"
      consumes:
        - application/json
      produces:
        - application/json
      operationId: "graphqlPost"
      parameters:
        - name: "request"
          in: body
          description: "GraphQL Request."
          required: true
          schema:
            $ref: '#/definitions/GraphQLRequest'
      responses:
        200:
          description: "Success"
          schema:
            $ref: '#/definitions/GraphQLResponse'
      security:
        - firebase: [ ]


  "/webhooks/contentful":
    post:
      description: Webhook callbacks on Contentful events
      consumes:
        - application/vnd.contentful.management.v1+json
      produces:
        - application/json
      operationId: "reportContentfulEvent"
      parameters:
        - name: "request"
          in: body
          required: true
          schema:
            type: object
      responses:
        200:
          description: "Success"
          schema:
            type: object
      security:
        - api_key: [ ]

  "/webhooks/stripe":
    post:
      description: Webhook to receive Stripe events
      consumes:
        - application/json
      operationId: "reportStripeEvent"
      parameters:
        - name: "event"
          in: body
          required: true
          schema:
            type: object
      responses:
        200:
          description: "Success"

  "/webhooks/slack":
    post:
      description: Webhook to receive slack events
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      operationId: "reportSlackEvent"
      parameters:
        - name: "command"
          in: formData
          type: string
          required: true
        - name: "text"
          in: formData
          type: string
        - name: "response_url"
          in: formData
          type: string
        - name: "trigger_id"
          in: formData
          type: string
        - name: "user_id"
          in: formData
          type: string
        - name: "team_id"
          in: formData
          type: string
        - name: "channel_id"
          in: formData
          type: string
          required: true
        - name: "api_app_id"
          in: formData
          type: string
      responses:
        200:
          description: "Success"


  "/payment/subscribed-products/{productId}":
    get:
      description: Get customer's subscribed product in Stripe.
      operationId: getSubscribedPaymentProduct
      produces:
        - application/json
      parameters:
        - name: "productId"
          in: path
          required: true
          type: string
      responses:
        200:
          description: Subscribed product
          schema:
            $ref: "#/definitions/SubscribedPaymentProduct"
        404:
          description: "Not found"
        500:
          description: "Internal Error"
      security:
        - firebase: [ ]
  "/payment/checkout-sessions":
    post:
      description: Create/fetch checkout session
      operationId: createOrFetchCheckoutSession
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: "request"
          in: body
          required: true
          schema:
            $ref: "#/definitions/CheckoutSessionRequest"
      responses:
        200:
          description: Checkout session url and expiry date
          schema:
            $ref: "#/definitions/CheckoutSessionResponse"
      security:
        - firebase: [ ]
  "/payment/customer-portal-sessions":
    post:
      description: Create customer portal session
      operationId: createCustomerPortalSession
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: "request"
          in: body
          required: true
          schema:
            $ref: "#/definitions/CustomerPortalSessionRequest"
      responses:
        200:
          description: Customer Portal Session
          schema:
            $ref: "#/definitions/CustomerPortalSessionResponse"
      security:
        - firebase: [ ]


  "/suppression-groups":
    get:
      description: Get all suppression groups
      operationId: "getSuppressionGroups"
      responses:
        200:
          description: "List of all the suppression groups"
          schema:
            $ref: "#/definitions/SuppressionGroups"
      security:
        - firebase: [ ]
  "/suppression-groups/{suppressionGroupId}":
    put:
      description: Upsert into a suppression group
      operationId: "upsertIntoSuppressionGroup"
      parameters:
        - name: suppressionGroupId
          type: number
          in: path
          required: true
      responses:
        200:
          description: "Success"
      security:
        - firebase: [ ]
    delete:
      description: Remove from a suppression group
      operationId: "removeFromSuppressionGroup"
      parameters:
        - name: suppressionGroupId
          type: number
          in: path
          required: true
      responses:
        200:
          description: "Success"
      security:
        - firebase: [ ]


  "/apps/invest/funds":
    get:
      description: Get all fund info access status
      operationId: "getAllFundInfoAccessStatus"
      responses:
        200:
          description: "List of funds and their status"
          schema:
            type: object
      security:
        - firebase: [ ]

  "/apps/invest/funds/{fundId}":
    get:
      description: Get fund info access status
      operationId: "getFundInfoAccessStatus"
      parameters:
        - name: "fundId"
          in: path
          required: true
          type: string
      responses:
        200:
          description: "User is registered for given fund"
        400:
          description: "Bad request"
        403:
          description: "User not qualified to see fund info"
        404:
          description: "User is not registered"
          schema:
            type: object
      security:
        - firebase: [ ]
    put:
      description: Submit FundInfoRequest
      consumes:
        - application/json
      operationId: "submitFundInfoRequest"
      parameters:
        - name: "fundId"
          in: path
          required: true
          type: string
        - name: "fundInfoRequest"
          in: body
          required: true
          schema:
            $ref: "#/definitions/FundInfoRequest"
      responses:
        200:
          description: "Success"
        403:
          description: "Registration not allowed"
        400:
          description: "Bad request"
      security:
        - firebase: [ ]


  "/apps/vault/assets":
    get:
      description: Get vault assets
      operationId: "getVaultAssets"
      produces:
        - "application/json"
      responses:
        200:
          description: "List of vault assets"
          schema:
            type: array
            items:
              $ref: "#/definitions/VaultAsset"

        404:
          description: "Not registered to vault service"
      security:
        - firebase: [ ]

  "/apps/vault/assets/{assetId}/addresses":
    get:
      description: Get vault asset addresses
      operationId: "getVaultAssetAddresses"
      produces:
        - "application/json"
      parameters:
        - name: "assetId"
          in: path
          type: string
          required: true
      responses:
        200:
          description: "List of vault asset addresses"
          schema:
            type: array
            items:
              $ref: "#/definitions/VaultAssetAddress"
      security:
        - firebase: [ ]

  "/apps/vault/transactions":
    get:
      description: Get vault transactions
      operationId: "getVaultTransactions"
      produces:
        - "text/csv"
        - "application/json"
      parameters:
        - name: "afterDate"
          in: query
          type: string
          format: date
          required: true
        - name: "beforeDate"
          in: query
          type: string
          format: date
          required: true
        - name: "zoneId"
          in: query
          type: string
          format: date
          required: false
      responses:
        200:
          description: "List of transactions"
        404:
          description: "User/account not registered/found"
      security:
        - firebase: [ ]

  "/apps/vault/admin/user":
    get:
      description: Get vault user
      operationId: "getVaultUserByAdmin"
      produces:
        - "application/json"
      parameters:
        - name: "email"
          in: query
          type: string
          format: email
          required: true
      responses:
        200:
          description: "User is fully registered to Vault app"
          schema:
            $ref: "#/definitions/VaultUserStatus"
        404:
          description: "User partially registered or User Not Found"
          schema:
            $ref: "#/definitions/VaultUserStatus"
      security:
        - api_key: [ ]
    put:
      description: Register vault user
      operationId: "registerVaultUserByAdmin"
      produces:
        - "application/json"
      parameters:
        - name: "email"
          in: query
          type: string
          format: email
          required: true
        - name: "vaultAccountId"
          in: query
          type: string
          required: true
        - name: "currency"
          in: query
          type: string
      responses:
        200:
          description: "User registered"
          schema:
            $ref: "#/definitions/VaultUserStatus"
        404:
          description: "User not found"
      security:
        - api_key: [ ]
    delete:
      description: Deregister vault user
      operationId: "deregisterVaultUserByAdmin"
      produces:
        - "application/json"
      parameters:
        - name: "email"
          in: query
          type: string
          format: email
          required: true
      responses:
        200:
          description: "User deregistered"
          schema:
            $ref: "#/definitions/VaultUserStatus"
        404:
          description: "User not found"
      security:
        - api_key: [ ]

  "/apps/vault/admin/transactions":
    get:
      description: Get vault transactions
      operationId: "getVaultTransactionsByAdmin"
      produces:
        - "text/csv"
      parameters:
        - name: "vaultAccountId"
          in: query
          type: string
          required: true
        - name: "afterDate"
          in: query
          type: string
          format: date
          required: true
        - name: "beforeDate"
          in: query
          type: string
          format: date
          required: true
        - name: "zoneId"
          in: query
          type: string
          format: date
          required: false
      responses:
        200:
          description: "CSV file list of transactions"
        404:
          description: "User/account not registered/found"
      security:
        - api_key: [ ]

  "/apps/vault/settings":
    get:
      description: Get vault app setting
      operationId: getVaultAppSettings
      produces:
        - "application/json"
      responses:
        200:
          description: Vault app settings
          schema:
            $ref: "#/definitions/VaultAppSettings"
      security:
        - firebase: [ ]
    put:
      description: Update vault app settings
      operationId: updateVaultAppSettings
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "vaultAppRequest"
          in: body
          schema:
            $ref: "#/definitions/VaultAppSettings"
      responses:
        200:
          description: Updated vault app settings
          schema:
            $ref: "#/definitions/VaultAppSettings"
      security:
        - firebase: [ ]

  "/apps/vault/staking/assets":
    get:
      description: Get vault staking assets
      operationId: "getVaultStakingAssets"
      produces:
        - "application/json"
      responses:
        200:
          description: Vault staking assets
          schema:
            type: array
            items:
              $ref: "#/definitions/VaultStakingAsset"
      security:
        - firebase: [ ]

  "/apps/vault/staking/positions":
    get:
      description: Get vault staking positions
      operationId: "getVaultStakingPositions"
      produces:
        - "application/json"
      responses:
        200:
          description: Vault staking positions
          schema:
            type: array
            items:
              $ref: "#/definitions/VaultStakingPosition"
      security:
        - firebase: [ ]
    post:
      description: Create Vault Staking Position
      operationId: createVaultStakingPosition
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: StakingRequest
          in: body
          schema:
            $ref: "#/definitions/StakeRequest"
      responses:
        201:
          description: Created vault staking position
          schema:
            $ref: "#/definitions/VaultStakingPosition"
        404:
          description: Bad request
      security:
        - firebase: [ ]
  "/apps/vault/staking/positions/{stakingPositionId}":
    get:
      description: Get vault staking position by id
      operationId: "getVaultStakingPosition"
      produces:
        - "application/json"
      parameters:
        - name: stakingPositionId
          in: path
          type: string
          required: true
      responses:
        200:
          description: Vault staking position
          schema:
            $ref: "#/definitions/VaultStakingPosition"
      security:
        - firebase: [ ]
    put:
      description: Unstake or claim rewards
      operationId: "updateVaultStakingPosition"
      produces:
        - "application/json"
      parameters:
        - name: stakingPositionId
          in: path
          type: string
          required: true
        - name: action
          in: query
          type: string
          enum:
            - unstake
            - withdraw
            - claimRewards
          required: true
      responses:
        200:
          description: Vault staking position
          schema:
            $ref: "#/definitions/VaultStakingPosition"
      security:
        - firebase: [ ]

  "/apps/vault/staking/providers":
    get:
      description: Get vault staking providers
      operationId: "getVaultStakingProviders"
      produces:
        - "application/json"
      responses:
        200:
          description: Vault staking providers
          schema:
            type: array
            items:
              $ref: "#/definitions/VaultStakingProvider"
      security:
        - firebase: [ ]


definitions:

  User:
    type: object
    properties:
      userId:
        type: string
      analyticsId:
        type: string
    required:
      - userId
      - analyticsId


  GraphQLRequest:
    type: object
    properties:
      query:
        description: "GraphQL query."
        type: string
    required:
      - query
  GraphQLResponse:
    type: object
    properties:
      data:
        type: object
      errors:
        type: array
        items:
          type: string


  EmailSubscriptionsRequest:
    type: object
    properties:
      emails:
        type: array
        items:
          type: string
          format: email
      listIds:
        type: array
        items:
          type: string


  SubscribedPaymentProduct:
    type: object
    properties:
      productId:
        type: string
      state:
        type: string
        enum:
          - active
          - blocked
          - ended
      priceId:
        type: string
    required:
      - productId
      - state
      - priceId


  CheckoutSessionRequest:
    type: object
    properties:
      priceId:
        type: string
      successUrl:
        type: string
      cancelUrl:
        type: string
    required:
      - priceId
      - successUrl
      - cancelUrl
  CheckoutSessionResponse:
    type: object
    properties:
      url:
        type: string
      expiresAt:
        type: string
        format: datetime
      priceId:
        type: string
      successUrl:
        type: string
      cancelUrl:
        type: string
    required:
      - url
      - expiresAt
      - priceId
      - successUrl
      - cancelUrl
  CustomerPortalSessionRequest:
    type: object
    properties:
      returnUrl:
        type: string
    required:
      - returnUrl
  CustomerPortalSessionResponse:
    type: object
    properties:
      url:
        type: string
      returnUrl:
        type: string
    required:
      - url
      - returnUrl


  SuppressionGroups:
    type: array
    items:
      $ref: '#/definitions/SuppressionGroup'
  SuppressionGroup:
    type: object
    properties:
      id:
        type: number
      name:
        type: string
      suppressed:
        type: boolean
    required:
      - id
      - name
      - suppressed


  FundInfoRequest:
    type: object
    properties:
      investorType:
        type: string
        enum:
          - PROFESSIONAL
          - ELECTIVE_PROFESSIONAL
          - UNQUALIFIED
      name:
        type: string
      company:
        type: string
      phoneNumber:
        type: object
        properties:
          countryCode:
            type: string
          nationalNumber:
            type: string
        required:
          - countryCode
          - nationalNumber
      countryCode:
        type: string
        enum:
          - AND # Andorra
          - ARE # United Arab Emirates
          - AFG # Afghanistan
          - ATG # Antigua & Barbuda
          - AIA # Anguilla
          - ALB # Albania
          - ARM # Armenia
          - AGO # Angola
          - ATA # Antarctica
          - ARG # Argentina
          - ASM # American Samoa
          - AUT # Austria
          - AUS # Australia
          - ABW # Aruba
          - ALA # Åland Islands
          - AZE # Azerbaijan
          - BIH # Bosnia & Herzegovina
          - BRB # Barbados
          - BGD # Bangladesh
          - BEL # Belgium
          - BFA # Burkina Faso
          - BGR # Bulgaria
          - BHR # Bahrain
          - BDI # Burundi
          - BEN # Benin
          - BLM # St. Barthélemy
          - BMU # Bermuda
          - BRN # Brunei
          - BOL # Bolivia
          - BES # Caribbean Netherlands
          - BRA # Brazil
          - BHS # Bahamas
          - BTN # Bhutan
          - BVT # Bouvet Island
          - BWA # Botswana
          - BLR # Belarus
          - BLZ # Belize
          - CAN # Canada
          - CCK # Cocos (Keeling) Islands
          - COD # Congo - Kinshasa
          - CAF # Central African Republic
          - COG # Congo - Brazzaville
          - CHE # Switzerland
          - CIV # Côte d’Ivoire
          - COK # Cook Islands
          - CHL # Chile
          - CMR # Cameroon
          - CHN # China
          - COL # Colombia
          - CRI # Costa Rica
          - CUB # Cuba
          - CPV # Cape Verde
          - CUW # Curaçao
          - CXR # Christmas Island
          - CYP # Cyprus
          - CZE # Czechia
          - DEU # Germany
          - DJI # Djibouti
          - DNK # Denmark
          - DMA # Dominica
          - DOM # Dominican Republic
          - DZA # Algeria
          - ECU # Ecuador
          - EST # Estonia
          - EGY # Egypt
          - ESH # Western Sahara
          - ERI # Eritrea
          - ESP # Spain
          - ETH # Ethiopia
          - FIN # Finland
          - FJI # Fiji
          - FLK # Falkland Islands
          - FSM # Micronesia
          - FRO # Faroe Islands
          - FRA # France
          - GAB # Gabon
          - GBR # United Kingdom
          - GRD # Grenada
          - GEO # Georgia
          - GUF # French Guiana
          - GGY # Guernsey
          - GHA # Ghana
          - GIB # Gibraltar
          - GRL # Greenland
          - GMB # Gambia
          - GIN # Guinea
          - GLP # Guadeloupe
          - GNQ # Equatorial Guinea
          - GRC # Greece
          - SGS # South Georgia & South Sandwich Islands
          - GTM # Guatemala
          - GUM # Guam
          - GNB # Guinea-Bissau
          - GUY # Guyana
          - HKG # Hong Kong SAR China
          - HMD # Heard & McDonald Islands
          - HND # Honduras
          - HRV # Croatia
          - HTI # Haiti
          - HUN # Hungary
          - IDN # Indonesia
          - IRL # Ireland
          - ISR # Israel
          - IMN # Isle of Man
          - IND # India
          - IOT # British Indian Ocean Territory
          - IRQ # Iraq
          - IRN # Iran
          - ISL # Iceland
          - ITA # Italy
          - JEY # Jersey
          - JAM # Jamaica
          - JOR # Jordan
          - JPN # Japan
          - KEN # Kenya
          - KGZ # Kyrgyzstan
          - KHM # Cambodia
          - KIR # Kiribati
          - COM # Comoros
          - KNA # St. Kitts & Nevis
          - PRK # North Korea
          - KOR # South Korea
          - KWT # Kuwait
          - CYM # Cayman Islands
          - KAZ # Kazakhstan
          - LAO # Laos
          - LBN # Lebanon
          - LCA # St. Lucia
          - LIE # Liechtenstein
          - LKA # Sri Lanka
          - LBR # Liberia
          - LSO # Lesotho
          - LTU # Lithuania
          - LUX # Luxembourg
          - LVA # Latvia
          - LBY # Libya
          - MAR # Morocco
          - MCO # Monaco
          - MDA # Moldova
          - MNE # Montenegro
          - MAF # St. Martin
          - MDG # Madagascar
          - MHL # Marshall Islands
          - MKD # North Macedonia
          - MLI # Mali
          - MMR # Myanmar (Burma)
          - MNG # Mongolia
          - MAC # Macao SAR China
          - MNP # Northern Mariana Islands
          - MTQ # Martinique
          - MRT # Mauritania
          - MSR # Montserrat
          - MLT # Malta
          - MUS # Mauritius
          - MDV # Maldives
          - MWI # Malawi
          - MEX # Mexico
          - MYS # Malaysia
          - MOZ # Mozambique
          - NAM # Namibia
          - NCL # New Caledonia
          - NER # Niger
          - NFK # Norfolk Island
          - NGA # Nigeria
          - NIC # Nicaragua
          - NLD # Netherlands
          - NOR # Norway
          - NPL # Nepal
          - NRU # Nauru
          - NIU # Niue
          - NZL # New Zealand
          - OMN # Oman
          - PAN # Panama
          - PER # Peru
          - PYF # French Polynesia
          - PNG # Papua New Guinea
          - PHL # Philippines
          - PAK # Pakistan
          - POL # Poland
          - SPM # St. Pierre & Miquelon
          - PCN # Pitcairn Islands
          - PRI # Puerto Rico
          - PSE # Palestinian Territories
          - PRT # Portugal
          - PLW # Palau
          - PRY # Paraguay
          - QAT # Qatar
          - REU # Réunion
          - ROU # Romania
          - SRB # Serbia
          - RUS # Russia
          - RWA # Rwanda
          - SAU # Saudi Arabia
          - SLB # Solomon Islands
          - SYC # Seychelles
          - SDN # Sudan
          - SWE # Sweden
          - SGP # Singapore
          - SHN # St. Helena
          - SVN # Slovenia
          - SJM # Svalbard & Jan Mayen
          - SVK # Slovakia
          - SLE # Sierra Leone
          - SMR # San Marino
          - SEN # Senegal
          - SOM # Somalia
          - SUR # Suriname
          - SSD # South Sudan
          - STP # São Tomé & Príncipe
          - SLV # El Salvador
          - SXM # Sint Maarten
          - SYR # Syria
          - SWZ # Eswatini
          - TCA # Turks & Caicos Islands
          - TCD # Chad
          - ATF # French Southern Territories
          - TGO # Togo
          - THA # Thailand
          - TJK # Tajikistan
          - TKL # Tokelau
          - TLS # Timor-Leste
          - TKM # Turkmenistan
          - TUN # Tunisia
          - TON # Tonga
          - TUR # Turkey
          - TTO # Trinidad & Tobago
          - TUV # Tuvalu
          - TWN # Taiwan
          - TZA # Tanzania
          - UKR # Ukraine
          - UGA # Uganda
          - UMI # US Outlying Islands
          - USA # United States
          - URY # Uruguay
          - UZB # Uzbekistan
          - VAT # Vatican City
          - VCT # St. Vincent & Grenadines
          - VEN # Venezuela
          - VGB # British Virgin Islands
          - VIR # US Virgin Islands
          - VNM # Vietnam
          - VUT # Vanuatu
          - WLF # Wallis & Futuna
          - WSM # Samoa
          - YEM # Yemen
          - MYT # Mayotte
          - ZAF # South Africa
          - ZMB # Zambia
          - ZWE # Zimbabwe
      fundName:
        type: string
    required:
      - investorType


  VaultAssets:
    type: array
    items:
      $ref: "#/definitions/VaultAsset"
  VaultAsset:
    type: object
    properties:
      id:
        type: string
      available:
        type: number
      pending:
        type: number
      staked:
        type: number
      total:
        type: number
      rate:
        $ref: "#/definitions/Amount"
      fiatValue:
        $ref: "#/definitions/Amount"
      dailyPercentChange:
        type: number
    required:
      - id
      - total
  Amount:
    type: object
    properties:
      value:
        type: number
      currency:
        type: string
    required:
      - value
      - currency
  VaultAssetAddress:
    type: object
    properties:
      assetId:
        type: string
      address:
        type: string
      addressFormat:
        type: string
      legacyAddress:
        type: string
      tag:
        type: string
    required:
      - assetId
      - address
  VaultUserStatus:
    type: object
    properties:
      platformRegistered:
        type: boolean
      vaultAccountId:
        type: string
      stripeErrors:
        type: array
        items:
          type: string
    required:
      - platformRegistered
      - stripeErrors
  VaultAppSettings:
    type: object
    properties:
      currency:
        type: string
    required:
      - currency
  VaultStakingAsset:
    type: object
    properties:
      id:
        type: string
      available:
        type: string
      pending:
        type: string
      staked:
        type: string
    required:
      - id
  VaultStakingPosition:
    type: object
    properties:
      id:
        type: string
      vaultAccountId:
        type: string
      validatorName:
        type: string
      providerName:
        type: string
      chainDescriptor:
        type: string
      amount:
        type: string
      rewardsAmount:
        type: string
      dateCreated:
        type: string
      status:
        type: string
      relatedTransactions:
        type: array
        items:
          $ref: "#/definitions/RelatedTransaction"
      validatorAddress:
        type: string
      providerId:
        type: string
      availableActions:
        type: array
        items:
          type: string
      inProgress:
        type: boolean
      inProgressTxId:
        type: string
      blockchainPositionInfo:
        type: object
        $ref: "#/definitions/BlockchainPositionInfo"
    required:
      - id
      - vaultAccountId
      - validatorName
      - providerName
      - chainDescriptor
      - amount
      - rewardsAmount
      - dateCreated
      - status
      - relatedTransactions
      - validatorAddress
      - providerId
      - availableActions
      - inProgress
      - blockchainPositionInfo
  RelatedTransaction:
    type: object
    properties:
      txId:
        type: string
      completed:
        type: boolean
    required:
      - txId
      - completed
  BlockchainPositionInfo:
    type: object
    properties:
      stakeAccountAddress:
        type: string
  StakeRequest:
    type: object
    properties:
      vaultAssetId:
        type: string
      amount:
        type: string
    required:
      - vaultAssetId
      - amount
  VaultStakingProvider:
    type: object
    properties:
      id:
        type: string
      providerName:
        type: string
      validators:
        type: array
        items:
          $ref: "#/definitions/VaultStakingProviderValidator"
      iconUrl:
        type: string
      termsOfServiceUrl:
        type: string
    required:
      - id
      - providerName
      - validators
      - iconUrl
      - termsOfServiceUrl
  VaultStakingProviderValidator:
    type: object
    properties:
      chainDescriptor:
        type: string
      feePercent:
        type: number
    required:
      - chainDescriptor
      - feePercent


securityDefinitions:
  firebase:
    authorizationUrl: ""
    flow: "implicit"
    type: "oauth2"
    x-google-issuer: "https://securetoken.google.com/${GCP_PROJECT_ID}"
    x-google-jwks_uri: "https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com"
    x-google-audiences: "${GCP_PROJECT_ID}"
  apple:
    authorizationUrl: ""
    flow: "implicit"
    type: "oauth2"
    x-google-issuer: "https://appleid.apple.com"
    x-google-jwks_uri: "https://appleid.apple.com/auth/keys"
    x-google-audiences: "com.k33.platform.client.web"
  api_key:
    type: apiKey
    name: "x-api-key"
    in: header