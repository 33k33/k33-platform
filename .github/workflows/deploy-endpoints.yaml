name: Deploy API gateway to GCP
on:
  workflow_dispatch:
env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_ID: api.arcane.no
  ESP_FULL_VERSION: 2.37.0
jobs:
  deploy-endpoints:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v3
      - name: Google auth
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          version: 394.0.0
      - name: Deploy GCP Cloud Endpoints
        env:
          GCP_BACKEND_HOST: ${{ secrets.GCP_BACKEND_HOST }}
        run: |
          TMP_DIR=$(mktemp -d)
          echo "$TMP_DIR"
          TMP_FILE="$TMP_DIR/arcane-platform-api.yaml"
          trap 'rm -rf "$TMP_DIR"' EXIT
          sed 's~${GCP_PROJECT_ID}~'"${GCP_PROJECT_ID}"'~g; s~${GCP_BACKEND_HOST}~'"${GCP_BACKEND_HOST}"'~g' libs/clients/arcane-platform-client/src/main/openapi/arcane-platform-api.yaml > "$TMP_FILE"
          gcloud endpoints services deploy "$TMP_FILE"
      - name: Fetch Endpoints Service Config ID
        run: echo "SERVICE_CONFIG_ID=$(gcloud endpoints configs list --service api.arcane.no --format=object --flatten=id --sort-by=~id --limit=1)" >> $GITHUB_ENV
      - name: Build & push custom ESP v2 docker image for GCP Cloud Run
        working-directory: apps/esp-v2
        run: |-
          ./build_docker_image.sh \
            -s $SERVICE_ID \
            -c $SERVICE_CONFIG_ID \
            -p $GCP_PROJECT_ID \
            -v $ESP_FULL_VERSION \
            -g europe-docker.pkg.dev/$GCP_PROJECT_ID/platform
      - name: Deploy ESP v2
        run: |-
          gcloud run deploy arcane-platform-gateway \
            --region europe-west1 \
            --image europe-docker.pkg.dev/$GCP_PROJECT_ID/platform/endpoints-runtime-serverless:$ESP_FULL_VERSION-$SERVICE_ID-$SERVICE_CONFIG_ID \
            --set-env-vars=ESPv2_ARGS=^++^--cors_preset=cors_with_regex++--cors_allow_origin_regex='^https:\/\/(dev\.)?arcane\.no$'++--cors_max_age=5m \
            --cpu=1 \
            --memory=512Mi \
            --min-instances=1 \
            --max-instances=1 \
            --concurrency=1000 \
            --service-account arcane-platform-gateway \
            --allow-unauthenticated \
            --port=8080 \
            --platform=managed
